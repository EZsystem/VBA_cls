'=====================================
' Class Module: acc_clsExcelImporter
' 説明　：Excel配列からテンポラリテーブルへの取込＆メインテーブルへコミットを提供するクラス（汎用版）
' 作成日：2025/04/25
' 更新日：再生成 by そうじろう
'=====================================
Option Compare Database
Option Explicit

' --- 内部保持変数 ---
Private pDB               As DAO.Database
Private pDictMapping      As Object
Private pDictValidFields  As Object
Private pColMapping       As Object
Private pSkipConditions   As Object
Private pDefaultValues    As Object
Private pImportTableName As String
Private pImportSourceFieldName As String
Private pImportTargetFieldName As String

' --- 公開プロパティ ---
Public tableName       As String
Public TempTableName   As String
Public ImportColumnMax As Long

'=================================================
' サブルーチン名 : Init
'=================================================
Public Sub Init()
    Set pDB              = CurrentDb
    Set pDictMapping     = CreateObject("Scripting.Dictionary")
    Set pDictValidFields = CreateObject("Scripting.Dictionary")
    Set pColMapping      = CreateObject("Scripting.Dictionary")
End Sub

'=================================================
' プロパティ名 : SkipConditions
'=================================================
Public Property Let SkipConditions(val As Object)
    Set pSkipConditions = val
End Property

Public Property Get SkipConditions() As Object
    Set SkipConditions = pSkipConditions
End Property

'=================================================
' プロパティ名 : DefaultValues
'=================================================
Public Property Set DefaultValues(val As Object)
    Set pDefaultValues = val
End Property

Public Property Get DefaultValues() As Object
    Set DefaultValues = pDefaultValues
End Property

'=================================================
' プロパティ名 : MappingMode
'=================================================
Public Property Let MappingMode(val As String)
    Select Case val
        Case "タイトル一致": Call PrepareMappings_ByTitleMatch_Flexible
        Case "取込情報テーブル": Call PrepareMappings_ByImportTable
        Case Else: MsgBox "未対応のMappingMode：" & val, vbCritical
    End Select
End Property

'=================================================
' プロパティ名 : fieldNames
'=================================================
Public Property Let fieldNames(val As Variant)
    PrepareFieldNames val
End Property

'=================================================
' プロパティ名 : ImportTableName
'=================================================
Public Property Let ImportTableName(val As String)
    pImportTableName = val
End Property

'=================================================
' プロパティ名 : ImportSourceFieldName
'=================================================
Public Property Let ImportSourceFieldName(val As String)
    pImportSourceFieldName = val
End Property

'=================================================
' プロパティ名 : ImportTargetFieldName
'=================================================
Public Property Let ImportTargetFieldName(val As String)
    pImportTargetFieldName = val
End Property

'=================================================
' サブルーチン名 : PrepareFieldNames
'=================================================
Private Sub PrepareFieldNames(val As Variant)
    Dim i     As Long
    Dim title As String
    For i = 1 To ImportColumnMax
        title = ""
        On Error Resume Next
        title = Trim(Nz(val(1, i), ""))     ' 1行目タイトル
        If title = "" Then _
            title = Trim(Nz(val(i, 1), ""))  ' 1列目対応
        On Error GoTo 0
        If title <> "" Then pColMapping.Add i, title
    Next i
End Sub

'=================================================
' サブルーチン名 : PrepareMappings_ByTitleMatch_Flexible
'=================================================
Private Sub PrepareMappings_ByTitleMatch_Flexible()
    Dim fld As Variant
    For Each fld In pColMapping.Items
        pDictMapping(fld) = fld
    Next fld
End Sub

'=================================================
' サブルーチン名 : PrepareMappings_ByImportTable
'=================================================
Private Sub PrepareMappings_ByImportTable()
    Dim rs As DAO.Recordset
    Set rs = pDB.OpenRecordset(pImportTableName, dbOpenSnapshot)
    Do Until rs.EOF
        pDictMapping(rs.Fields(pImportSourceFieldName).Value) = rs.Fields(pImportTargetFieldName).Value
        rs.MoveNext
    Loop
    rs.Close
End Sub

'=================================================
' サブルーチン名 : ImportFromArray
'=================================================
Public Sub ImportFromArray(dataArr As Variant)
    Dim rs      As DAO.Recordset
    Set rs = pDB.OpenRecordset(TempTableName, dbOpenDynaset)
    Dim r       As Long
    Dim c       As Variant
    Dim fld     As String
    Dim valCell As Variant

    For r = 1 To UBound(dataArr, 1)
        If Not ShouldSkip(dataArr, r) Then
            rs.AddNew
            For Each c In pColMapping.Keys
                fld = pColMapping(c)
                valCell = dataArr(r, c)
                If (IsNull(valCell) Or Trim(CStr(valCell)) = "") Then
                    If Not pDefaultValues Is Nothing Then
                        If pDefaultValues.Exists(fld) Then _
                            valCell = pDefaultValues(fld)
                    End If
                End If
                rs.Fields(pDictMapping(fld)).Value = valCell
            Next c
            rs.Update
        End If
    Next r
    rs.Close
End Sub

'=================================================
' 関数名 : ShouldSkip
'=================================================
Private Function ShouldSkip(dataArr As Variant, rowIndex As Long) As Boolean
    Dim fn       As Variant
    Dim patterns As Variant
    Dim cell     As String
    If pSkipConditions Is Nothing Then Exit Function
    For Each fn In pSkipConditions.Keys
        patterns = pSkipConditions(fn)
        cell = Trim(Nz(dataArr(rowIndex, pColMapping(fn)), ""))
        Dim pat As Variant
        For Each pat In patterns
            If cell Like pat Then
                ShouldSkip = True
                Exit Function
            End If
        Next pat
    Next fn
End Function

'=================================================
' サブルーチン名 : CommitToMain
'=================================================
Public Sub CommitToMain()
    pDB.Execute "INSERT INTO [" & tableName & "] SELECT * FROM [" & TempTableName & "]", dbFailOnError
End Sub
