'=====================================
' Class Module: com_clsArrayHelper
' 説明　：2次元配列の解析や演算を提供するユーティリティ
' 作成日：2025/04/25
' 更新日：再生成 by そうじろう
'=====================================
Option Compare Database
Option Explicit

' --- 内部保持変数 ---
Private arrData As Variant

'=================================================
' プロパティ名 : Data
'=================================================
Public Property Let Data(value As Variant)
    arrData = value
End Property

'=================================================
' 関数名 : GetColIndex
'=================================================
Public Function GetColIndex(colName As String) As Long
    Dim j As Long
    For j = LBound(arrData, 2) To UBound(arrData, 2)
        If arrData(1, j) = colName Then
            GetColIndex = j
            Exit Function
        End If
    Next j
    GetColIndex = -1
End Function

'=================================================
' 関数名 : CalculateOneRow
'=================================================
Public Function CalculateOneRow(row As Long, col1 As String, col2 As String, op As String, Optional doRound As Boolean = False, Optional digits As Integer = 0) As Double
    Dim i1 As Long, i2 As Long
    i1 = GetColIndex(col1)
    i2 = GetColIndex(col2)
    If i1 = -1 Or i2 = -1 Then Err.Raise vbObjectError + 100, , "列名が見つかりません"
    Dim v1 As Double: v1 = CDbl(arrData(row, i1))
    Dim v2 As Double: v2 = CDbl(arrData(row, i2))
    Dim res As Double
    Select Case op
        Case "add": res = v1 + v2
        Case "sub": res = v1 - v2
        Case "mul": res = v1 * v2
        Case "div": If v2 <> 0 Then res = v1 / v2 Else res = 0
        Case Else: Err.Raise vbObjectError + 101, , "不正な演算子"
    End Select
    If doRound And digits >= 0 Then res = Round(res, digits)
    CalculateOneRow = res
End Function

'=================================================
' 関数名 : CalculateIfMatch
'=================================================
Public Function CalculateIfMatch(row As Long, condCol As String, expVal As Variant, col1 As String, col2 As String, op As String, Optional doRound As Boolean = False, Optional digits As Integer = 0) As Double
    Dim idx As Long: idx = GetColIndex(condCol)
    If idx = -1 Then Err.Raise vbObjectError + 102, , "条件列が見つかりません"
    If arrData(row, idx) <> expVal Then
        CalculateIfMatch = 0: Exit Function
    End If
    CalculateIfMatch = CalculateOneRow(row, col1, col2, op, doRound, digits)
End Function

'=================================================
' 関数名 : IsValueEqual
'=================================================
Public Function IsValueEqual(row As Long, colName As String, expected As Variant) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    IsValueEqual = (arrData(row, idx) = expected)
End Function

'=================================================
' 関数名 : IsBlank
'=================================================
Public Function IsBlank(row As Long, colName As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    IsBlank = (Trim(arrData(row, idx) & "") = "")
End Function

'=================================================
' 関数名 : IsGreaterThan
'=================================================
Public Function IsGreaterThan(row As Long, colName As String, threshold As Double) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    If IsNumeric(arrData(row, idx)) Then IsGreaterThan = (arrData(row, idx) > threshold)
End Function

'=================================================
' 関数名 : IsBetween
'=================================================
Public Function IsBetween(row As Long, colName As String, minVal As Double, maxVal As Double) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    If IsNumeric(arrData(row, idx)) Then IsBetween = (arrData(row, idx) >= minVal And arrData(row, idx) <= maxVal)
End Function

'=================================================
' 関数名 : Contains
'=================================================
Public Function Contains(row As Long, colName As String, keyword As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    Contains = (InStr(1, arrData(row, idx) & "", keyword, vbTextCompare) > 0)
End Function

'=================================================
' 関数名 : StartsWith
'=================================================
Public Function StartsWith(row As Long, colName As String, prefix As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    StartsWith = (Left(arrData(row, idx) & "", Len(prefix)) = prefix)
End Function

'=================================================
' 関数名 : EndsWith
'=================================================
Public Function EndsWith(row As Long, colName As String, suffix As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    EndsWith = (Right(arrData(row, idx) & "", Len(suffix)) = suffix)
End Function

'=================================================
' 関数名 : GetValue
'=================================================
Public Function GetValue(row As Long, colName As String) As Variant
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    GetValue = arrData(row, idx)
End Function

'=================================================
' 関数名 : GetNumericValue
'=================================================
Public Function GetNumericValue(row As Long, colName As String) As Double
    Dim v As Variant: v = GetValue(row, colName)
    If IsNumeric(v) Then GetNumericValue = CDbl(v) Else GetNumericValue = 0
End Function
